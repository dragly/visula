on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

name: Continuous integration
env:
  RUSTC_WRAPPER: sccache
jobs:
  ci:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        rust:
          - stable
          - 1.84.0  # Minimum supported Rust version
        target:
          - x86_64-unknown-linux-gnu
          - wasm32-unknown-unknown

    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          wget -qO - http://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list http://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list
          sudo apt update
          sudo apt install vulkan-sdk
          sudo apt-get install libegl1-mesa-dev shaderc
      - name: sccache cache files
        uses: actions/cache@v4
        with:
          path: /home/runner/.cache/sccache
          key: ${{ matrix.rust }}-sccache-${{ github.sha }}
          restore-keys: |
            ${{ matrix.rust }}-sccache
      - name: Download sccache
        run: |
          wget https://github.com/mozilla/sccache/releases/download/v0.2.15/sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz
          tar -xvzf sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz
          sudo cp sccache-v0.2.15-x86_64-unknown-linux-musl/sccache /usr/bin/sccache
          sudo chmod +x /usr/bin/sccache
          sccache --show-stats
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
          components: clippy, rustfmt
      - name: Check formatting
        run: cargo fmt --all --check
      - name: Check
        run: cargo check --all-features --all-targets --target ${{ matrix.target }}
      - name: Build
        run: cargo build --all-features --all-targets --target ${{ matrix.target }}
      - name: Test
        if: matrix.target != 'wasm32-unknown-unknown'
        run: cargo test --all-features --all-targets --target ${{ matrix.target }}
      - name: Clippy
        run: cargo clippy --all-features --all-targets --target ${{ matrix.target }} -- -D warnings
